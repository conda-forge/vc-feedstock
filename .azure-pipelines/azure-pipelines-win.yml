# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: win
  pool:
    vmImage: windows-2022
  strategy:
    matrix:
      ? win_64_cl_version19.16.27033runtime_version14.16.27033sha2565B0CBB977F2F5253B1EBE5C9D30EDBDA35DBD68FB70DE7AF5FAAC6423DB575B5update_version9uuid4100b84d-1b4d-487d-9f89-1354a7138c8fvcver14.1vsver15vsyear2017
      : CONFIG: win_64_cl_version19.16.27033runtime_version14.16.27033sha2565B0CBB977F2F5253B1EBE5C9D30EDBDA35DBD68FB70DE7AF5FAAC6423DB575B5update_version9uuid4100b84d-1b4d-487d-9f89-1354a7138c8fvcver14.1vsver15vsyear2017
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cl_version19.16.27033runtime_hb8c9d74a3c
      ? win_64_cl_version19.28.29325runtime_version14.28.29325sha256B1A32C71A6B7D5978904FB223763263EA5A7EB23B2C44A0D60E90D234AD99178update_version8uuid89a3b9df-4a09-492e-8474-8f92c115c51dvcver14.2vsver16vsyear2019
      : CONFIG: win_64_cl_version19.28.29325runtime_version14.28.29325sha256B1A32C71A6B7D5978904FB223763263EA5A7EB23B2C44A0D60E90D234AD99178update_version8uuid89a3b9df-4a09-492e-8474-8f92c115c51dvcver14.2vsver16vsyear2019
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cl_version19.28.29325runtime_hdf83153fbd
      ? win_64_cl_version19.29.30139runtime_version14.29.30139sha256296F96CD102250636BCD23AB6E6CF70935337B1BBB3507FE8521D8D9CFAA932Fupdate_version11uuidb929b7fe-5c89-4553-9abe-6324631dcc3avcver14.2vsver16vsyear2019
      : CONFIG: win_64_cl_version19.29.30139runtime_version14.29.30139sha256296F96CD102250636BCD23AB6E6CF70935337B1BBB3507FE8521D8D9CFAA932Fupdate_version11uuidb929b7fe-5c89-4553-9abe-6324631dcc3avcver14.2vsver16vsyear2019
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cl_version19.29.30139runtime_h7bc45f3861
      ? win_64_cl_version19.33.31629runtime_version14.32.31332sha256CE6593A1520591E7DEA2B93FD03116E3FC3B3821A0525322B0A430FAA6B3C0B4update_version2uuid7331f052-6c2d-4890-8041-8058fee5fb0fvcver14.3vsver17vsyear2022
      : CONFIG: win_64_cl_version19.33.31629runtime_version14.32.31332sha256CE6593A1520591E7DEA2B93FD03116E3FC3B3821A0525322B0A430FAA6B3C0B4update_version2uuid7331f052-6c2d-4890-8041-8058fee5fb0fvcver14.3vsver17vsyear2022
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cl_version19.33.31629runtime_he55580cce7
      ? win_64_cl_version19.34.31933runtime_version14.34.31931sha2562257B3FBE3C7559DE8B31170155A433FAF5B83829E67C589D5674FF086B868B9update_version4uuidbcb0cef1-f8cb-4311-8a5c-650a5b694eabvcver14.3vsver17vsyear2022
      : CONFIG: win_64_cl_version19.34.31933runtime_version14.34.31931sha2562257B3FBE3C7559DE8B31170155A433FAF5B83829E67C589D5674FF086B868B9update_version4uuidbcb0cef1-f8cb-4311-8a5c-650a5b694eabvcver14.3vsver17vsyear2022
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cl_version19.34.31933runtime_hb6dfc535f3
      ? win_64_cl_version19.35.32217runtime_version14.35.32215sha256296F96CD102250636BCD23AB6E6CF70935337B1BBB3507FE8521D8D9CFAA932Fupdate_version5uuidb929b7fe-5c89-4553-9abe-6324631dcc3avcver14.3vsver17vsyear2022
      : CONFIG: win_64_cl_version19.35.32217runtime_version14.35.32215sha256296F96CD102250636BCD23AB6E6CF70935337B1BBB3507FE8521D8D9CFAA932Fupdate_version5uuidb929b7fe-5c89-4553-9abe-6324631dcc3avcver14.3vsver17vsyear2022
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cl_version19.35.32217runtime_h6b339b12e8
  timeoutInMinutes: 360
  variables:
    CONDA_BLD_PATH: D:\\bld\\
    UPLOAD_TEMP: D:\\tmp

  steps:
    - task: PythonScript@0
      displayName: 'Download Miniforge'
      inputs:
        scriptSource: inline
        script: |
          import urllib.request
          url = 'https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Windows-x86_64.exe'
          path = r"$(Build.ArtifactStagingDirectory)/Miniforge.exe"
          urllib.request.urlretrieve(url, path)

    - script: |
        start /wait "" %BUILD_ARTIFACTSTAGINGDIRECTORY%\Miniforge.exe /InstallationType=JustMe /RegisterPython=0 /S /D=C:\Miniforge
      displayName: Install Miniforge

    - powershell: Write-Host "##vso[task.prependpath]C:\Miniforge\Scripts"
      displayName: Add conda to PATH

    - script: |
        call activate base
        mamba.exe install "python=3.10" conda-build conda pip boa conda-forge-ci-setup=3 -c conda-forge --strict-channel-priority --yes
      displayName: Install conda-build

    - script: set PYTHONUNBUFFERED=1
      displayName: Set PYTHONUNBUFFERED

    # Configure the VM
    - script: |
        call activate base
        setup_conda_rc .\ ".\recipe" .\.ci_support\%CONFIG%.yaml
      displayName: conda-forge CI setup

    # Configure the VM.
    - script: |
        set "CI=azure"
        call activate base
        run_conda_forge_build_setup
      displayName: conda-forge build setup

    - script: |
        call activate base
        if EXIST LICENSE.txt (
          copy LICENSE.txt "recipe\\recipe-scripts-license.txt"
        )
        conda.exe mambabuild "recipe" -m .ci_support\%CONFIG%.yaml --suppress-variables
      displayName: Build recipe
      env:
        PYTHONUNBUFFERED: 1
    - script: |
        set CI=azure
        set CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
        set FEEDSTOCK_NAME=$(build.Repository.Name)
        set ARTIFACT_STAGING_DIR=$(Build.ArtifactStagingDirectory)
        set CONDA_BLD_DIR=$(CONDA_BLD_PATH)
        set BLD_ARTIFACT_PREFIX=conda_artifacts
        if "%AGENT_JOBSTATUS%" == "Failed" (
            set ENV_ARTIFACT_PREFIX=conda_envs
        )
        call ".scripts\create_conda_build_artifacts.bat"
      displayName: Prepare conda build artifacts
      condition: succeededOrFailed()

    - task: PublishPipelineArtifact@1
      displayName: Store conda build artifacts
      condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
      inputs:
        targetPath: $(BLD_ARTIFACT_PATH)
        artifactName: $(BLD_ARTIFACT_NAME)

    - task: PublishPipelineArtifact@1
      displayName: Store conda build environment artifacts
      condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
      inputs:
        targetPath: $(ENV_ARTIFACT_PATH)
        artifactName: $(ENV_ARTIFACT_NAME)
    - script: |
        set "FEEDSTOCK_NAME=%BUILD_REPOSITORY_NAME:*/=%"
        call activate base
        validate_recipe_outputs "%FEEDSTOCK_NAME%"
      displayName: Validate Recipe Outputs

    - script: |
        set "GIT_BRANCH=%BUILD_SOURCEBRANCHNAME%"
        set "FEEDSTOCK_NAME=%BUILD_REPOSITORY_NAME:*/=%"
        set "TEMP=$(UPLOAD_TEMP)"
        if not exist "%TEMP%\" md "%TEMP%"
        set "TMP=%TEMP%"
        call activate base
        upload_package --validate --feedstock-name="%FEEDSTOCK_NAME%" .\ ".\recipe" .ci_support\%CONFIG%.yaml
      displayName: Upload package
      env:
        BINSTAR_TOKEN: $(BINSTAR_TOKEN)
        FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
        STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
      condition: and(succeeded(), not(eq(variables['UPLOAD_PACKAGES'], 'False')), not(eq(variables['Build.Reason'], 'PullRequest')))
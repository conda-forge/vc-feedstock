# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: linux
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      ? win_arm64_cl_version19.29.30139cross_target_platformwin-64runtime_version14.29.30139sha256296F96CD102250636BCD23AB6E6CF70935337B1BBB3507FE8521D8D9CFAA932Fupdate_version11uuidb929b7fe-5c89-45_hea466f03
      : CONFIG: win_arm64_cl_version19.29.30139cross_target_platformwin-64runtime_version14.29.30139sha256296F96CD102250636BCD23AB6E6CF70935337B1BBB3507FE8521D8D9CFAA932Fupdate_version11uuidb929b7fe-5c89-45_hea466f03
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
        SHORT_CONFIG: win_arm64_cl_version19.29.30139cross_tar_hea466f03
      ? win_arm64_cl_version19.42.34433cross_target_platformwin-64runtime_version14.42.34433sha2561821577409C35B2B9505AC833E246376CC68A8262972100444010B57226F0940update_version12uuidc7dac50a-e3e8-40_h1689e2ec
      : CONFIG: win_arm64_cl_version19.42.34433cross_target_platformwin-64runtime_version14.42.34433sha2561821577409C35B2B9505AC833E246376CC68A8262972100444010B57226F0940update_version12uuidc7dac50a-e3e8-40_h1689e2ec
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
        SHORT_CONFIG: win_arm64_cl_version19.42.34433cross_tar_h1689e2ec
      ? win_arm64_cl_version19.42.34433cross_target_platformwin-arm64runtime_version14.42.34433sha256C176B30681576B86068F8B55FAE512391EE4217511494B24393C1C9476BC2169update_version12uuid5319f718-2a84_h63aee346
      : CONFIG: win_arm64_cl_version19.42.34433cross_target_platformwin-arm64runtime_version14.42.34433sha256C176B30681576B86068F8B55FAE512391EE4217511494B24393C1C9476BC2169update_version12uuid5319f718-2a84_h63aee346
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
        SHORT_CONFIG: win_arm64_cl_version19.42.34433cross_tar_h63aee346
      ? win_arm64_cl_version19.44.35207cross_target_platformwin-64runtime_version14.44.35208sha256D62841375B90782B1829483AC75695CCEF680A8F13E7DE569B992EF33C6CD14Aupdate_version14uuid40b59c73-1480-4c_h369391eb
      : CONFIG: win_arm64_cl_version19.44.35207cross_target_platformwin-64runtime_version14.44.35208sha256D62841375B90782B1829483AC75695CCEF680A8F13E7DE569B992EF33C6CD14Aupdate_version14uuid40b59c73-1480-4c_h369391eb
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
        SHORT_CONFIG: win_arm64_cl_version19.44.35207cross_tar_h369391eb
      ? win_arm64_cl_version19.44.35207cross_target_platformwin-arm64runtime_version14.44.35208sha2561DB5C25643A3A4E4C99BFD0D0931A702A49C73DADC4B30672687F32188C1724Cupdate_version14uuid40b59c73-1480_hb89f60bd
      : CONFIG: win_arm64_cl_version19.44.35207cross_target_platformwin-arm64runtime_version14.44.35208sha2561DB5C25643A3A4E4C99BFD0D0931A702A49C73DADC4B30672687F32188C1724Cupdate_version14uuid40b59c73-1480_hb89f60bd
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
        SHORT_CONFIG: win_arm64_cl_version19.44.35207cross_tar_hb89f60bd
  timeoutInMinutes: 360
  variables: {}

  steps:
  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))
    displayName: Configure binfmt_misc

  - script: |
        export CI=azure
        export flow_run_id=azure_$(Build.BuildNumber).$(System.JobAttempt)
        export remote_url=$(Build.Repository.Uri)
        export sha=$(Build.SourceVersion)
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
          export IS_PR_BUILD="True"
        else
          export IS_PR_BUILD="False"
        fi
        .scripts/run_docker_build.sh
    displayName: Run docker build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
  - script: |
        export CI=azure
        export CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        export CONDA_BLD_DIR=build_artifacts
        export ARTIFACT_STAGING_DIR="$(Build.ArtifactStagingDirectory)"
        # Archive everything in CONDA_BLD_DIR except environments
        export BLD_ARTIFACT_PREFIX=conda_artifacts
        if [[ "$AGENT_JOBSTATUS" == "Failed" ]]; then
          # Archive the CONDA_BLD_DIR environments only when the job fails
          export ENV_ARTIFACT_PREFIX=conda_envs
        fi
        ./.scripts/create_conda_build_artifacts.sh
    displayName: Prepare conda build artifacts
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: Store conda build artifacts
    condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(BLD_ARTIFACT_PATH)
      artifactName: $(BLD_ARTIFACT_NAME)

  - task: PublishPipelineArtifact@1
    displayName: Store conda build environment artifacts
    condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(ENV_ARTIFACT_PATH)
      artifactName: $(ENV_ARTIFACT_NAME)
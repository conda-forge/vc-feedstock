# version numbering is explained at https://stackoverflow.com/questions/42730478/version-numbers-for-visual-studio-2017-boost-and-cmake

# VS2017 is fundamentally compatible with VS2015.  We name our package
# vs2015_runtime so that it can't be mixed up with the runtime from
# VS2015 - you do actually need VS2017 runtime for things compiled
# with VS2017, and the runtime we have here is backwards-compatible
# with things compiled with VS2015.
{% set runtime_year = "2015" %}

{% if vsyear is not defined %}
{% set vsyear = "" %}
{% set runtime_version = "" %}
{% set cl_version = "" %}
{% set vcver = "" %}
{% endif %}

package:
  name: vs{{ vsyear }}
  version: {{ runtime_version }}

source:
  # Latest version redirect: https://aka.ms/vs/16/release/vc_redist.x64.exe
  - url: https://download.visualstudio.microsoft.com/download/pr/{{ uuid }}/{{ sha256 }}/vc_redist.x64.exe  # [win64]
    sha256: {{ sha256 | lower }}  # [win64]
  # Latest version redirect: https://aka.ms/vs/16/release/vc_redist.x86.exe
  - url: https://download.visualstudio.microsoft.com/download/pr/{{ uuid }}/{{ sha256 }}/vc_redist.x86.exe  # [win32]
    sha256: {{ sha256 | lower }}  # [win32]

build:
  number: 11
  skip: True  # [not win]

outputs:
  - name: vs{{ runtime_year }}_runtime
    version: {{ runtime_version }}
    script: vc_repack.py
    script_interpreter: >-
      python -m vc_repack --extract --version {{ runtime_version }}
      -a {{ target_platform }}
    build:
      binary_relocation: false
      detect_binary_files_with_prefix: false
      no_link:
        - Library/bin/*.dll
      missing_dso_whitelist:
        - "*.dll"
        - "*.DLL"
    requirements:
      build:
        - m2-p7zip
      host:
      run:
        - ucrt >=10.0.20348.0  # [vsver >=17 or (vsver == 16 and update_version >= 10)]
    about:
      summary: >-
        MSVC runtimes associated with cl.exe version {{ cl_version }}
        (VS {{ vsyear }} update {{ update_version }})
      home: https://visualstudio.microsoft.com/downloads/
      license: LicenseRef-ProprietaryMicrosoft
      license_family: Proprietary
      license_file:
        - LICENSE.TXT
        - LICENSE.RTF
    test:
      commands:
        - dir %PREFIX%\\Library\\bin\\*.dll
        {% for dllname in [
            'api-ms-win-core-console-l1-1-0.dll',
            'api-ms-win-core-datetime-l1-1-0.dll',
            'api-ms-win-core-debug-l1-1-0.dll',
            'api-ms-win-core-errorhandling-l1-1-0.dll',
            'api-ms-win-core-file-l1-1-0.dll',
            'api-ms-win-core-file-l1-2-0.dll',
            'api-ms-win-core-file-l2-1-0.dll',
            'api-ms-win-core-handle-l1-1-0.dll',
            'api-ms-win-core-heap-l1-1-0.dll',
            'api-ms-win-core-interlocked-l1-1-0.dll',
            'api-ms-win-core-libraryloader-l1-1-0.dll',
            'api-ms-win-core-localization-l1-2-0.dll',
            'api-ms-win-core-memory-l1-1-0.dll',
            'api-ms-win-core-namedpipe-l1-1-0.dll',
            'api-ms-win-core-processenvironment-l1-1-0.dll',
            'api-ms-win-core-processthreads-l1-1-0.dll',
            'api-ms-win-core-processthreads-l1-1-1.dll',
            'api-ms-win-core-profile-l1-1-0.dll',
            'api-ms-win-core-rtlsupport-l1-1-0.dll',
            'api-ms-win-core-string-l1-1-0.dll',
            'api-ms-win-core-synch-l1-1-0.dll',
            'api-ms-win-core-synch-l1-2-0.dll',
            'api-ms-win-core-sysinfo-l1-1-0.dll',
            'api-ms-win-core-timezone-l1-1-0.dll',
            'api-ms-win-core-util-l1-1-0.dll',
            'api-ms-win-crt-conio-l1-1-0.dll',
            'api-ms-win-crt-convert-l1-1-0.dll',
            'api-ms-win-crt-environment-l1-1-0.dll',
            'api-ms-win-crt-filesystem-l1-1-0.dll',
            'api-ms-win-crt-heap-l1-1-0.dll',
            'api-ms-win-crt-locale-l1-1-0.dll',
            'api-ms-win-crt-math-l1-1-0.dll',
            'api-ms-win-crt-multibyte-l1-1-0.dll',
            'api-ms-win-crt-private-l1-1-0.dll',
            'api-ms-win-crt-process-l1-1-0.dll',
            'api-ms-win-crt-runtime-l1-1-0.dll',
            'api-ms-win-crt-stdio-l1-1-0.dll',
            'api-ms-win-crt-string-l1-1-0.dll',
            'api-ms-win-crt-time-l1-1-0.dll',
            'api-ms-win-crt-utility-l1-1-0.dll',
            'concrt140.dll',
            'msvcp140_1.dll',
            'msvcp140_2.dll',
            'msvcp140.dll',
            'ucrtbase.dll',
            'vcamp140.dll',
            'vccorlib140.dll',
            'vcomp140.dll',
            'vcruntime140.dll'] %}
        - if not exist %LIBRARY_BIN%\{{ dllname }} exit 1
        - if not exist %PREFIX%\{{ dllname }} exit 1
        {% endfor %}
        {% if vsyear == "2019" %}
        - if not exist %LIBRARY_BIN%\vcruntime140_1.dll exit 1
        - if not exist %LIBRARY_BIN%\msvcp140_atomic_wait.dll exit 1
        - if not exist %LIBRARY_BIN%\msvcp140_codecvt_ids.dll exit 1
        {% endif %}

  - name: vc
    version: {{ vcver }}
    build:
      track_features:
        - vc{{ vcver.split(".")[0] }}
    requirements:
      run:
        # Set lower bound for runtime (no upper bound).  Upper bound
        # is still present, but it's part of the run_exports for the
        # compiler: assume that when vcver's major version changes,
        # MSFT has broken our binary compatibility.
        - vs{{ runtime_year }}_runtime >={{ runtime_version }}
    about:
      home: https://github.com/conda/conda/wiki/VC-features
      license: BSD-3-Clause
      license_family: BSD
      summary: >-
        A meta-package to impose mutual exclusivity among software
        built with different VS versions
      description: >-
        This metapackage is used to enforce consistency of runtime
        dependencies within an environment
      doc_url: https://github.com/conda/conda/wiki/VC-features
      dev_url: https://github.com/conda/conda/wiki/VC-features
  
  - name: vs{{ vsyear }}_{{ target_platform }}
    version: {{ cl_version }}
    script: vc_repack.py
    script_interpreter: >-
      python -m vc_repack --activate --arch {{ target_platform }} --version {{ runtime_version }}
      --activate-year {{ vsyear }} --activate-major {{ vsver }} --activate-vcver {{ vcver }}
      --activate-vcvars-ver {{ cl_version.split(".")[0]|int - 5 }}.{{ cl_version.split(".")[1] }}
    build:
      track_features:
        - vc{{ vcver.split(".")[0] }}
      run_exports:
        strong:
          # compatible within major version.  This is MSFT's
          # incrementing of the UCRT version.  It was 14.0 with
          # VS2015, and 14.1 with VS2017 - if the major version
          # changes, we're assuming that binary compatibility breaks.
          # This has a minimum bound equal to vcver, so building with
          # vs2017 here will require the vs2017-era runtime (the
          # package is named vs2015_runtime, but the version differs)
          - vc >={{ vcver }},<{{ vcver.split('.')[0] | int + 1 }}
          - vs{{ runtime_year }}_runtime >={{ runtime_version }}
          - ucrt >=10.0.20348.0  # [vsver >=17 or (vsver == 16 and update_version >= 10)]
    requirements:
      run:
        # Used to set up the path in the activate script
        - vswhere
    test:
      commands:
        - echo "%CMAKE_GENERATOR%"
        - echo "%CMAKE_GENERATOR_PLATFORM%"
        - echo "%CMAKE_GENERATOR_TOOLSET%"
    about:
      summary: >-
        Activation and version verification of MSVC {{ vcver }}
        (VS {{ vsyear }} compiler, update {{ update_version }})
      license: BSD-3-Clause

about:
  home: https://docs.microsoft.com/en-us/visualstudio/windows/?view=vs-{{ vsyear }}
  summary: >-
    Activation and version verification of MSVC {{ vcver }} (VS {{ vsyear }}
    compiler, update {{ update_version }})
  license: LicenseRef-ProprietaryMicrosoft
  license_family: Proprietary

extra:
  feedstock-name: vc
  recipe-maintainers:
    - jakirkham
    - 183amir
    - pelson
    - patricksnape
    - msarahan
    - isuruf
